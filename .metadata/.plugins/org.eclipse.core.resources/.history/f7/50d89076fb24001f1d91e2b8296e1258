package com.grupo7.controller;

import com.grupo7.model.Medico;
import com.grupo7.service.MedicoService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class MedicoController {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private MedicoRepository medicoRepository;

    @Autowired
    private ConsultaRepository consultaRepository;

    @Autowired
    private PacienteRepository pacienteRepository;

    @GetMapping("/register/medico")
    public String showMedicoRegistrationForm(@RequestParam("userId") Long userId, Model model) {
        Medico medico = new Medico();
        medico.setUser(userRepository.findById(userId).orElse(null));
        model.addAttribute("medico", medico);
        return "registerMedico";
    }

    @PostMapping("/register/medico")
    public String registerMedico(Medico medico) {
        medicoRepository.save(medico);
        return "redirect:/medico/dashboard";
    }

    @GetMapping("/medico/dashboard")
    public String showMedicoDashboard(Model model) {
        Medico medico = medicoRepository.findByUser_Id(userId);
        List<Consulta> consultas = consultaRepository.findByMedicoId(medico.getId());
        List<Paciente> pacientes = pacienteRepository.findByMedicoId(medico.getId());
        model.addAttribute("consultas", consultas);
        model.addAttribute("pacientes", pacientes);
        return "medicoDashboard";
    }

    @GetMapping("/medico/consultas")
    public String listConsultas(Model model) {
        model.addAttribute("consultas", consultaRepository.findAll());
        return "listConsultas";
    }

    @GetMapping("/medico/consultas/new")
    public String showNewConsultaForm(Model model) {
        model.addAttribute("consulta", new Consulta());
        return "newConsulta";
    }

    @PostMapping("/medico/consultas")
    public String createConsulta(@ModelAttribute Consulta consulta) {
        consultaRepository.save(consulta);
        return "redirect:/medico/consultas";
    }

    @GetMapping("/medico/consultas/edit/{id}")
    public String showEditConsultaForm(@PathVariable Long id, Model model) {
        Consulta consulta = consultaRepository.findById(id).orElse(null);
        model.addAttribute("consulta", consulta);
        return "editConsulta";
    }

    @PostMapping("/medico/consultas/{id}")
    public String updateConsulta(@PathVariable Long id, @ModelAttribute Consulta consulta) {
        consulta.setId(id);
        consultaRepository.save(consulta);
        return "redirect:/medico/consultas";
    }

    @GetMapping("/medico/consultas/delete/{id}")
    public String deleteConsulta(@PathVariable Long id) {
        consultaRepository.deleteById(id);
        return "redirect:/medico/consultas";
    }
}
